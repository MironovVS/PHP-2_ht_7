<?php// Базовый контроллер сайта.abstract class C_Base extends C_Controller{	protected $title;		// заголовок страницы	protected $content;		// содержание страницы	protected $model;	public $pages;	protected $err;	protected $res;	protected $user;	public function __construct(){		parent::__construct();		$this->model= M_Article::Instance();		$this->pages=$this->model->get_pages();		$this->err='';		$this->res='';	}	protected function auth(){		//$mUsers = M_Users::Instance();		//$this->user=$mUsers->check();	}	protected function before()	{		$this->title = 'ДЗ7';		$this->content = '';	}		//	// Генерация базового шаблонаы	//		public function render()	{		$vars = array('title' => $this->title, 'content' => $this->content);			$page = $this->Template('v/main_view.php', $vars);						echo $page;	}	//метод определения текущей страницы для постраничного вывода	protected function get_page(){		if(isset($_GET['page']) && $_GET['page']!==0){			$page= (int) $_GET['page'];			if($page>$this->pages){				header('Location:index.php?page='.$pages);				die();			}		}		else{			$page=1;		}		return $page;	}	//метод проверки полученных в $_GET параметров на наличие ожидаемых	//сюда наверно можно в последствии добавить валидацию	protected function check_params($expected=array()){		if(empty($expected) || !empty(array_diff($expected,array_keys($_GET)))){			header('Location: index.php');			die();		}		else{			return true;		}	}}//трейт пагинатор используется и для страниц на главной и для консоли редактораtrait paginator{	protected function paginator(){		$this->page=parent::get_page();		$this->paginator=parent::Template('v/nav_view.php', array('page'=>$this->page, 'pages'=>$this->pages));	}}